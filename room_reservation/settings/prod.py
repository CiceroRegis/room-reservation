"""
Django settings for room_reservation project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y)_kfv=(1rv%0)(en2w&fw#245zqt%ue%8nph0gdvkux$0gyuw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Environment-specific settings
# Wildcard value set because this application running in container
# https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/#environment-specific-settings
ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    # Core modules
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party modules
    'filebrowser',

    # Application modules
    'room_reservation.core',
    'room_reservation.reservation'
]

# Middleware
# https://docs.djangoproject.com/en/2.2/topics/http/middleware/
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Urls
# https://docs.djangoproject.com/en/2.2/ref/settings/
ROOT_URLCONF = 'room_reservation.urls'

# Templates
# https://docs.djangoproject.com/en/2.2/topics/templates/
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ]
        },
    },
]

# WSGI
# https://docs.djangoproject.com/pt-br/2.2/howto/deployment/wsgi/
WSGI_APPLICATION = 'room_reservation.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('MYSQL_NAME', 'room_reservation'),
        'USER': os.environ.get('MYSQL_USER', 'room_reservation'),
        'PASSWORD': os.environ.get('MYSQL_PASSWORD', 'PDp8CEmlW7'),
        'HOST': os.environ.get('MYSQL_HOST', 'dcsaanmycluster.sabinmtz.com'),
        'PORT': os.environ.get('MYSQL_PORT', '3306'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Substituting a custom User model
# https://docs.djangoproject.com/en/2.2/topics/auth/customizing/#substituting-a-custom-user-model
AUTH_USER_MODEL = 'core.User'

# Specifying authentication backends
# https://docs.djangoproject.com/en/2.2/topics/auth/customizing/#specifying-authentication-backends
AUTHENTICATION_BACKENDS = [
    'room_reservation.contrib.auth.backends.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# Ldap configuration to single sign-on
# Application definitions
LDAP_RESOURCE = os.environ.get('LDAP_RESOURCE', 'sabinmtz.com')
LDAP_HOST = os.environ.get('LDAP_HOST', 'dcsaansrvad03.sabinmtz.com')
LDAP_USER = os.environ.get('LDAP_USER', 'appinova')
LDAP_PASS = os.environ.get('LDAP_PASS', '92GJBK')

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'www')
MEDIA_ROOT = os.path.join(BASE_DIR, 'www', 'media')
MEDIA_URL = '/media/'

# Messages Tags
# https://docs.djangoproject.com/en/2.2/ref/contrib/messages/#message-tags
MESSAGE_TAGS = {
    40: 'danger'
}

# Locale path
# https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-LOCALE_PATHS
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'room_reservation', 'locale')
]

# Filebrowser Extensions
# https://django-filebrowser.readthedocs.io/en/latest/settings.html#extensions
FILEBROWSER_EXTENSIONS = {
    'Image': ['.jpg', '.jpeg', '.gif', '.png'],
}
FILEBROWSER_DIRECTORY = ''

# Email room-reservation
# https://docs.djangoproject.com/en/2.2/topics/email/
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'correio.sabin.com.br'
EMAIL_HOST_USER = 'reservadesalas'
EMAIL_HOST_PASSWORD = 'Reserv@123'
EMAIL_USE_TLS = True
EMAIL_PORT = 465

# Logging
# https://docs.djangoproject.com/en/2.2/topics/logging/
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'stream': {
            'level': 'WARNING',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['stream'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
}

# Production Settings
# https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/
# self command: python manage.py check --deploy
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')  # specific nginx prop
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CONN_MAX_AGE = None
SECURE_SSL_REDIRECT = True
X_FRAME_OPTIONS = 'DENY'
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_HSTS_SECONDS = True
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
