# Generated by Django 2.2.2 on 2019-09-25 19:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import filebrowser.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usu√°rio',
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ReservationPublic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Reservation Public',
                'verbose_name_plural': 'Reservation Public',
                'db_table': 'ReservationPublic',
            },
        ),
        migrations.CreateModel(
            name='ReservationResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Reservation resources',
                'db_table': 'ReservationResource',
            },
        ),
        migrations.CreateModel(
            name='ReservationRoomFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Reservation Room Formats',
                'verbose_name_plural': 'Reservation Room Formats',
                'db_table': 'ReservationRoomFormat',
            },
        ),
        migrations.CreateModel(
            name='ReservationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Reservation Type',
                'verbose_name_plural': 'Reservation Type',
                'db_table': 'ReservationType',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowRoomProperty', models.BooleanField(default=False, help_text='if this option is checked the room properties will be shown.', verbose_name='Allow room property')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('numberPeople', models.IntegerField(default=0, null=True, verbose_name='People number')),
                ('numberPeopleAggregated', models.IntegerField(default=0, editable=False, null=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('cover', filebrowser.fields.FileBrowseField(blank=True, max_length=200, null=True, verbose_name='Cover')),
                ('allowRoomType', models.BooleanField(default=False, help_text='if this option is checked the Room model type will be shown.', verbose_name='Room model type')),
                ('autoReserve', models.BooleanField(default=True, verbose_name='Auto Reserve')),
                ('isLinkedRoom', models.BooleanField(default=False, editable=False)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('linkRoom', models.ManyToManyField(blank=True, editable=False, related_name='linked_rooms', to='core.Room', verbose_name='Linked room')),
            ],
            options={
                'verbose_name': 'Room',
                'db_table': 'Room',
            },
        ),
        migrations.CreateModel(
            name='RoomProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('value', models.CharField(blank=True, max_length=45, null=True, verbose_name='Quantidade')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'RoomProperty',
                'verbose_name_plural': 'RoomProperty',
                'db_table': 'RoomProperty',
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Nome')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Room Type',
                'verbose_name_plural': 'Room Type',
                'db_table': 'RoomType',
            },
        ),
        migrations.CreateModel(
            name='RoomLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, choices=[('LEFT', 'Left'), ('RIGHT', 'Right'), ('TOP', 'Top'), ('Down', 'Down')], editable=False, max_length=20, null=True, verbose_name='Room location')),
                ('position', models.IntegerField(verbose_name='Room position')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('linkRoom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='room_linked', to='core.Room', verbose_name='Room')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='room_link', to='core.Room')),
            ],
            options={
                'verbose_name': 'Room Link',
                'db_table': 'RoomLink',
            },
        ),
        migrations.CreateModel(
            name='RoomImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fileSrc', filebrowser.fields.FileBrowseField(max_length=200, verbose_name='Image')),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_images', to='core.Room', verbose_name='Sala')),
            ],
            options={
                'verbose_name': 'Imagens das sala',
                'db_table': 'RoomImage',
            },
        ),
        migrations.AddField(
            model_name='room',
            name='roomProperty',
            field=models.ManyToManyField(related_name='room_property', to='core.RoomProperty', verbose_name='Room Property'),
        ),
        migrations.AddField(
            model_name='room',
            name='roomType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.RoomType', verbose_name='Room Type'),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=60, null=True, verbose_name='Event name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('dateInitial', models.DateTimeField(verbose_name='Initial date')),
                ('dateFinal', models.DateTimeField(verbose_name='Final date')),
                ('numberOfGuests', models.IntegerField(default=0, verbose_name='Number of guests')),
                ('guests', models.TextField(blank=True, null=True, verbose_name='Guests')),
                ('booked', models.BooleanField(null=True, verbose_name='Booked')),
                ('isCanceled', models.BooleanField(default=False, editable=False)),
                ('isLinkedRoom', models.BooleanField(default=False, editable=False)),
                ('updateAt', models.DateTimeField(auto_now=True)),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('linkedReservation', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linked_rooms', to='core.Reservation', verbose_name='Linked Room')),
                ('reservationPublic', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.ReservationPublic', verbose_name='Reservation Public')),
                ('reservationResource', models.ManyToManyField(blank=True, editable=False, to='core.ReservationResource', verbose_name='Reservation resources')),
                ('reservationRoomFormat', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.ReservationRoomFormat', verbose_name='Reservation Room Format')),
                ('reservationType', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.ReservationType', verbose_name='Reservation Type')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Room', verbose_name='Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Reservation',
                'db_table': 'Reservation',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('reservation-saved', 'Notify when reservation approved')], max_length=200, verbose_name='Action')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification',
                'db_table': 'Notification',
            },
        ),
    ]
